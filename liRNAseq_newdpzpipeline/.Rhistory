genes_5kb
load("exons.Rda") } else
load("exons.Rda") { else
load("exons.Rda") } else
load("/groups/immdiv-bioinfo/evergrande/copy_work/yael/liRNAseq_newdpzpipeline\exons.Rda") } else
load("/groups/immdiv-bioinfo/evergrande/copy_work/yael/liRNAseq_newdpzpipeline/exons.Rda") } else
# Counts UMI and genes
/groups/immdiv-bioinfo/evergrande/copy_work/yael/liRNAseq_newdpzpipeline/
load("/groups/immdiv-bioinfo/evergrande/copy_work/yael/liRNAseq_newdpzpipeline/genes.Rda") } else
if (args[1] == "genes_5kb") {
load("/groups/immdiv-bioinfo/evergrande/copy_work/yael/liRNAseq_newdpzpipeline/genes_5kb.Rda") } else { print("choose between exons/genes/genes_5kb")}
ref
counts_by = summarizeOverlaps(features = ref, reads = destfile, mode = "IntersectionNotEmpty", ignore.strand = F)
counts = data.frame(rownames(counts_by), assay(counts_by))
colnames(counts) = c("ENTREZID", prefix)
cat("Writes the counts file...\n")
write.table(file = sprintf("%s.%s.counts", paste(prefix, "_umicorrected", sep = ""), args[1]), x = counts, row.names = F, quote = F)
write.table(file = sprintf("%s.%s.counts", paste(prefix, "_umicorrected", sep = ""), args[1]), x = counts, row.names = F, quote =
